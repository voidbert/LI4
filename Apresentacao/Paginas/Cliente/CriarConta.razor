@page "/Cliente/CriarConta"

@using LI4.Apresentacao.Componentes
@using LI4.Negocio.Utilizadores
@using LI4.Apresentacao.Componentes

@namespace LI4.Apresentacao.Paginas.Cliente

@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage ProtectedLocalStorage
@inject UtilizadoresService UtilizadoresService

<Autorizador TipoDeConta=@null />
<Alerta @bind-Mensagem=@MensagemAlerta />

<main>
    <HeaderTitle>Criar Conta</HeaderTitle>
    <form class="form" @onsubmit="Registar">
        <input id="name" class="form-control" placeholder="Nome civil" @bind="FormModel!.NomeCivil"/>
        <input id="email" class="form-control" placeholder="Endereço eletrónico" @bind="FormModel!.EnderecoEletronico"/>
        <input type="password" id="password" class="form-control" placeholder="Palavra passe" @bind="FormModel!.PalavraPasse"/>


        <a href="/"><button class="btn">Cancelar</button></a>
        <button type="submit" id="register" class="btn">Continuar</button>
    </form>
</main>

@code
{
    private class ContaModel {
        public string NomeCivil { get; set; } = "";
        public string EnderecoEletronico { get; set; } = "";
        public string PalavraPasse { get; set; } = "";
    }

    [SupplyParameterFromForm]
    private ContaModel? FormModel { get; set; }
    private string? MensagemAlerta { get; set; }

    private SessaoController? SessaoController { get; set; }

    protected override void OnInitialized()
    {
        FormModel ??= new ContaModel();
        SessaoController = new SessaoController(UtilizadoresService, ProtectedLocalStorage, NavigationManager);
    }

    private async Task Registar()
    {
        try
        {
            UtilizadoresService.RegistarUtilizador(FormModel!.EnderecoEletronico, FormModel!.NomeCivil, FormModel!.PalavraPasse, Utilizador.Tipo.Cliente);
            await SessaoController!.IniciarSessao(FormModel!.EnderecoEletronico, FormModel!.PalavraPasse);
            await SessaoController!.RedirecionarConformeTipo(null);
        }
        catch (EnderecoEletronicoInvalidoException)
        {
            MensagemAlerta = "Endereço eletrónico inválido";
        }
        catch (UtilizadorExistenteException)
        {
            MensagemAlerta = "Endereço eletrónico já se encontra registado";
        }
    }
}
