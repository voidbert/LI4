@page "/Cliente/CriarConta"

@using LI4.Apresentacao.Componentes
@using LI4.Negocio.Utilizadores

@namespace LI4.Apresentacao.Paginas.Cliente

@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage ProtectedLocalStorage
@inject UtilizadoresService UtilizadoresService

<Autorizador TipoDeConta=@null />
<Alerta @bind-Mensagem=@MensagemAlerta />

<div class="text-center">
    <EditForm Model="@FormModel" OnSubmit="@Registar" FormName="Registar">
        <InputText id="name" placeholder="Nome civil" @bind-Value=@FormModel!.NomeCivil />
        <InputText class="form-control" id="email" placeholder="Endereço eletrónico" @bind-Value=@FormModel!.EnderecoEletronico />
        <InputText type="password" class="form-control" id="password" placeholder="Palavra passe" @bind-Value=@FormModel!.PalavraPasse />

        <a href="/">
            <button>Regressar</button>
        </a>

        <button type="submit" id="register">Continuar</button>
    </EditForm>
</div>

@code
{
    private class ContaModel {
        public string NomeCivil { get; set; } = "";
        public string EnderecoEletronico { get; set; } = "";
        public string PalavraPasse { get; set; } = "";
    }

    [SupplyParameterFromForm]
    private ContaModel? FormModel { get; set; }
    private string? MensagemAlerta { get; set; }

    private SessaoController? SessaoController { get; set; }

    protected override void OnInitialized()
    {
        FormModel ??= new ContaModel();
        SessaoController = new SessaoController(UtilizadoresService, ProtectedLocalStorage, NavigationManager);
    }

    private async Task Registar()
    {
        try
        {
            UtilizadoresService.RegistarUtilizador(FormModel!.EnderecoEletronico, FormModel!.NomeCivil, FormModel!.PalavraPasse, Utilizador.Tipo.Cliente);
            await SessaoController!.IniciarSessao(FormModel!.EnderecoEletronico, FormModel!.PalavraPasse);
            await SessaoController!.RedirecionarConformeTipo(null);
        }
        catch (EnderecoEletronicoInvalidoException)
        {
            MensagemAlerta = "Endereço eletrónico inválido";
        }
        catch (UtilizadorExistenteException)
        {
            MensagemAlerta = "Endereço eletrónico já se encontra registado";
        }
    }
}
