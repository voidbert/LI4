@*
Copyright 2025 Ana Cerqueira, Humberto Gomes, João Torres, José Lopes, José Matos

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*@

@page "/"

@using LI4.Apresentacao.Componentes
@using LI4.Negocio
@using LI4.Negocio.Utilizadores

@namespace LI4.Apresentacao.Paginas

@inject ICamadaNegocio CamadaNegocio
@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage ProtectedLocalStorage

<Autorizador TipoDeConta=@null />
<Alerta @bind-Mensagem=@MensagemAlerta />

<main>
    <HeaderTitle>Iniciar Sessão</HeaderTitle>
    <form class="form" @onsubmit="Autenticar">
        <input id="email" class="form-control" placeholder="Endereço eletrónico" @bind="FormModel!.EnderecoEletronico"/>
        <input type="password" id="password" class="form-control" placeholder="Palavra-passe" @bind="FormModel!.PalavraPasse"/>


        <a href="/Cliente/CriarConta"><button class="btn">Registar</button></a>
        <button type="submit" id="register" class="btn">Iniciar Sessão</button>
    </form>
</main>

@code
{
    private class CredenciaisModel
    {
        public string EnderecoEletronico { get; set; } = "";
        public string PalavraPasse { get; set; } = "";
    }

    [SupplyParameterFromForm]
    private CredenciaisModel? FormModel { get; set; }

    private SessaoController? SessaoController { get; set; }

    private string? MensagemAlerta { get; set; }

    protected override void OnInitialized()
    {
        FormModel ??= new CredenciaisModel();
        SessaoController = new SessaoController(CamadaNegocio, ProtectedLocalStorage, NavigationManager);
    }

    private async Task Autenticar()
    {
        if (FormModel!.EnderecoEletronico == "" || FormModel!.PalavraPasse == "")
        {
            MensagemAlerta = "Preencha o endereço eletrónico e a palavra passe";
            return;
        }

        try
        {
            await SessaoController!.IniciarSessao(FormModel!.EnderecoEletronico, FormModel!.PalavraPasse);
            await SessaoController!.RedirecionarConformeTipo(null);
        }
        catch (UtilizadorNaoEncontradoException)
        {
            MensagemAlerta = "Endereço eletrónico não encontrado";
            FormModel!.PalavraPasse = "";
        }
        catch (PalavraPasseIncorretaException)
        {
            MensagemAlerta = "Palavra passe incorreta";
            FormModel!.PalavraPasse = "";
        }
        catch (ImpedidoDeIniciarSessaoException)
        {
            MensagemAlerta = "Este utilizador foi eliminado";
            FormModel!.PalavraPasse = "";
        }
    }
}
