@page "/GestorDeProducao/Simulacao"

@using LI4.Apresentacao.Componentes
@using LI4.Negocio.Utilizadores
@using LI4.Negocio.Producao

@namespace LI4.Apresentacao.Paginas.GestorDeStock

@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage ProtectedLocalStorage
@inject ProducaoService ProducaoService
@inject UtilizadoresService UtilizadoresService

<Autorizador TipoDeConta=@Utilizador.Tipo.GestorDeProducao />
<Alerta @bind-Mensagem=@MensagemAlerta />

<main>
    <section class="eva-images">
        <img src="eva01.webp"/>
        <img src="eva01.webp"/>
        <img src="eva01.webp"/>
    </section>

    <section class="graph">
        <div id="base">
        <div id="section1">
            <p>Cabeça</p>
            <div class="section"></div>
        </div>
        <div id="section2">
            <p>Braços</p>
            <div class="section"></div>
        </div>
        <div id="section3">
            <p>Pernas</p>
            <div class="section"></div>
        </div>
        </div>
    </section>

    <LinkButton Href="/GestorDeProducao" Title="Voltar"/>
</main>

@code
{
    private OrdemProducao? OrdemProducao { get; set; }
    private string? MensagemAlerta { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            SessaoController sessoes = new SessaoController(UtilizadoresService, ProtectedLocalStorage, NavigationManager);
            GestorDeProducao utilizador = (GestorDeProducao) (await sessoes.ObterUtilizadorComSessaoIniciada())!;

            OrdemProducao = utilizador.OrdensProducao.MaxBy(o => o.InstanteEmissao);
            if (OrdemProducao == null)
            {
                MensagemAlerta = "Sem ordens de produção para visualizar";
                StateHasChanged();
                return;
            }

            if (OrdemProducao!.Visualizada)
            {
                MensagemAlerta = "Última ordem de produção já foi visualizada";
                OrdemProducao = null;
                StateHasChanged();
                return;
            }

            ProducaoService.RegistarOrdemProducaoComoVisualizada(OrdemProducao.Identificador!.Value);
            StateHasChanged();
        }
    }
}
