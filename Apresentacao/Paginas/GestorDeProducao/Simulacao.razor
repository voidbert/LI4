@page "/GestorDeProducao/Simulacao"

@using LI4.Apresentacao.Componentes
@using LI4.Negocio.Utilizadores
@using LI4.Negocio.Producao
@using LI4.Negocio

@namespace LI4.Apresentacao.Paginas.GestorDeStock

@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage ProtectedLocalStorage
@inject ProducaoService ProducaoService
@inject UtilizadoresService UtilizadoresService

<Autorizador TipoDeConta=@Utilizador.Tipo.GestorDeProducao />
<Alerta @bind-Mensagem=@MensagemAlerta />

<main>
    @if (OrdemProducao != null)
    {
        @foreach (var eva in EVAs.Select((eva, index) => new { eva, index }))
        {
            <div class="center-change-this-name">
                <div style="animation-delay: @($"{eva.index * 3 + 10}s")" class="go-off-screen">
                    <img
                        style="animation-delay: @($"{eva.index * 3}s")"
                        class="animate"
                        src="@eva.eva.Imagem"
                    />
                </div>
            </div>
        }
    }

    <section class="graph">
        <div id="section1">
            <p>Cabeça</p>
            <div class="section"></div>
        </div>
        <div id="section2">
            <p>Braços</p>
            <div class="section"></div>
        </div>
        <div id="section3">
            <p>Pernas</p>
            <div class="section"></div>
        </div>
        <img class="base" src="conveyor-belt.png"/>
    </section>

    <div style="z-index: 1">
        <LinkButton Href="/GestorDeProducao" Title="Voltar"/>
    </div>
</main>

@code
{
    private List<EVA> EVAs { get; set; } = new List<EVA>();
    private OrdemProducao? OrdemProducao { get; set; }
    private string? MensagemAlerta { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            SessaoController sessoes = new SessaoController(UtilizadoresService, ProtectedLocalStorage, NavigationManager);
            GestorDeProducao utilizador = (GestorDeProducao) (await sessoes.ObterUtilizadorComSessaoIniciada())!;

            OrdemProducao = utilizador.OrdensProducao.MaxBy(o => o.InstanteEmissao);
            if (OrdemProducao == null)
            {
                MensagemAlerta = "Sem ordens de produção para visualizar";
                StateHasChanged();
                return;
            }

            if (OrdemProducao!.Visualizada)
            {
                MensagemAlerta = "Última ordem de produção já foi visualizada";
                OrdemProducao = null;
                StateHasChanged();
                return;
            }

            foreach(KeyValuePair<EVA, int> pair in OrdemProducao.Conteudo)
            {
                for(int i = 0; i < pair.Value; i++)
                {
                    EVAs.Add(pair.Key);
                }
            }

            ProducaoService.RegistarOrdemProducaoComoVisualizada(OrdemProducao.Identificador!.Value);
            StateHasChanged();
        }
    }
}
