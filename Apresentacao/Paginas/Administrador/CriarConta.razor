@*
Copyright 2025 Ana Cerqueira, Humberto Gomes, João Torres, José Lopes, José Matos

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*@

@page "/Administrador/CriarConta"

@using LI4.Apresentacao.Componentes
@using LI4.Negocio
@using LI4.Negocio.Utilizadores

@inject ICamadaNegocio CamadaNegocio
@inject NavigationManager NavigationManager

@namespace LI4.Apresentacao.Paginas.Administrador

<Autorizador TipoDeConta=@Utilizador.Tipo.Administrador />
<Alerta @bind-Mensagem=@MensagemAlerta />

<main>
    <HeaderTitle>Criar Conta</HeaderTitle>
    <form class="form" @onsubmit="Registar">
        <input id="name" class="form-control" placeholder="Nome civil" @bind="FormModel!.NomeCivil"/>
        <input id="email" class="form-control" placeholder="Endereço eletrónico" @bind="FormModel!.EnderecoEletronico"/>
        <input type="password" id="password" class="form-control" placeholder="Palavra-passe" @bind="FormModel!.PalavraPasse"/>

        <select id="type" name="type" class="form-control" @bind="FormModel!.TipoDeConta">
            <option value="" selected>----</option>
            <option value="A">Administrador</option>
            <option value="GS">Gestor de Stock</option>
            <option value="GP">Gestor de Produção</option>
            <option value="GC">Gestor de Contas</option>
        </select>

        <a href="/Administrador"><button class="btn">Cancelar</button></a>
        <button type="submit" id="register" class="btn">Criar Conta</button>
    </form>
</main>

@code
{
    private class ContaModel
    {
        public string NomeCivil { get; set; } = "";
        public string EnderecoEletronico { get; set; } = "";
        public string PalavraPasse { get; set; } = "";
        public string TipoDeConta { get; set; } = "";
    }

    [SupplyParameterFromForm]
    private ContaModel? FormModel { get; set; }

    private string? MensagemAlerta { get; set; }

    protected override void OnInitialized()
    {
        FormModel ??= new ContaModel();
    }

    private void Registar()
    {
        if (FormModel!.TipoDeConta == "")
        {
            MensagemAlerta = "Defina antes o cargo do funcionário";
            return;
        }

        try
        {
            Utilizador.Tipo tipo = Utilizador.TipoDeString(FormModel!.TipoDeConta);
            CamadaNegocio.RegistarUtilizador(FormModel!.EnderecoEletronico, FormModel!.NomeCivil, FormModel!.PalavraPasse, tipo);
            NavigationManager.NavigateTo("/Administrador");
        }
        catch (EnderecoEletronicoInvalidoException)
        {
            MensagemAlerta = "Endereço eletrónico inválido";
        }
        catch (UtilizadorExistenteException)
        {
            MensagemAlerta = "Endereço eletrónico já se encontra registado";
        }
    }
}
