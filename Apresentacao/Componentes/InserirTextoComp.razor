<div class="textbox">
    @if (!string.IsNullOrEmpty(Label))
    {
        <label for="@Id">@Label</label>
    }
    <input 
        type="text" 
        id="@Id" 
        @bind="@Value" 
        placeholder="@Placeholder"
        style="@Style" 
    />
</div>

<style>
    .general-textbox label {
        display: block;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .general-textbox input {
        padding: 8px;
        font-size: 14px;
        border: 1px solid #8b8b8b;
        border-radius: 4px;
        width: 100%;
        box-sizing: border-box;
    }

    .general-textbox input:focus {
        border-color: #8b8b8b;
        outline: none;
    }
</style>

@code {
    [Parameter]
    public string Label { get; set; } = ""; // Texto do label associado ao input

    [Parameter]
    public string Id { get; set; } = "";// ID único para o campo

    [Parameter]
    public string Placeholder { get; set; } = ""; // Texto placeholder

    [Parameter]
    public string Style { get; set; } = ""; // Estilo adicional para o input

    [Parameter]
    public string Value { get; set; } = "";// Valor do input

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; } // Callback para alterações no valor

    private void OnInputChange(ChangeEventArgs e)
    {
        Value = e.Value?.ToString() ?? "";
        ValueChanged.InvokeAsync(Value); // Atualiza o valor vinculado
    }
}